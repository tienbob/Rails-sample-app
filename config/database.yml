# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: storage/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: storage/test.sqlite3

# Use PostgreSQL in production
production:
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  database: sample_app_production
  url: <%= ENV['DATABASE_URL'] %>
  cache:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    host: <%= ENV.fetch("DATABASE_HOST") { ENV['PGHOST'] || 'localhost' } %>
    port: <%= ENV.fetch("DATABASE_PORT") { ENV['PGPORT'] || '5432' } %>
    database: <%= ENV.fetch("DATABASE_NAME") { ENV['PGDATABASE'] || 'sample_app_production' } %><%= ENV['PGDATABASE'] ? '_cache' : '' %>
    username: <%= ENV.fetch("DATABASE_USERNAME") { ENV['PGUSER'] || 'postgres' } %>
    password: <%= ENV.fetch("DATABASE_PASSWORD") { ENV['PGPASSWORD'] || '' } %>
    url: <%= ENV['DATABASE_URL'] %>
    database_suffix: _cache
    migrations_paths: db/cache_migrate
  queue:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    host: <%= ENV.fetch("DATABASE_HOST") { ENV['PGHOST'] || 'localhost' } %>
    port: <%= ENV.fetch("DATABASE_PORT") { ENV['PGPORT'] || '5432' } %>
    database: <%= ENV.fetch("DATABASE_NAME") { ENV['PGDATABASE'] || 'sample_app_production' } %><%= ENV['PGDATABASE'] ? '_queue' : '' %>
    username: <%= ENV.fetch("DATABASE_USERNAME") { ENV['PGUSER'] || 'postgres' } %>
    password: <%= ENV.fetch("DATABASE_PASSWORD") { ENV['PGPASSWORD'] || '' } %>
    url: <%= ENV['DATABASE_URL'] %>
    database_suffix: _queue
    migrations_paths: db/queue_migrate
  cable:
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    host: <%= ENV.fetch("DATABASE_HOST") { ENV['PGHOST'] || 'localhost' } %>
    port: <%= ENV.fetch("DATABASE_PORT") { ENV['PGPORT'] || '5432' } %>
    database: <%= ENV.fetch("DATABASE_NAME") { ENV['PGDATABASE'] || 'sample_app_production' } %><%= ENV['PGDATABASE'] ? '_cable' : '' %>
    username: <%= ENV.fetch("DATABASE_USERNAME") { ENV['PGUSER'] || 'postgres' } %>
    password: <%= ENV.fetch("DATABASE_PASSWORD") { ENV['PGPASSWORD'] || '' } %>
    url: <%= ENV['DATABASE_URL'] %>
    database_suffix: _cable
    migrations_paths: db/cable_migrate
